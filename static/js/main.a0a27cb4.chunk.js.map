{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","HomepageHeading","mobile","Container","text","Header","as","content","inverted","style","fontSize","fontWeight","marginBottom","marginTop","Button","primary","size","Icon","name","DesktopContainer","state","hideFixedMenu","setState","fixed","showFixedMenu","children","this","props","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","textAlign","minHeight","padding","vertical","Menu","pointing","secondary","Item","active","position","marginLeft","Component","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","visible","Pusher","dimmed","onClick","ResponsiveContainer","HomepageLayout","Grid","container","stackable","verticalAlign","Row","Column","width","floated","Image","bordered","rounded","src","celled","columns","paddingBottom","paddingTop","avatar","Divider","className","horizontal","margin","textTransform","href","divided","List","link","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a0a27cb4.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\nimport React, { Component } from 'react'\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Responsive,\r\n  Segment,\r\n  Sidebar,\r\n  Visibility,\r\n} from 'semantic-ui-react'\r\n\r\n// Heads up!\r\n// We using React Static to prerender our docs with server side rendering, this is a quite simple solution.\r\n// For more advanced usage please check Responsive docs under the \"Usage\" section.\r\nconst getWidth = () => {\r\n  const isSSR = typeof window === 'undefined'\r\n\r\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\r\n}\r\n\r\n/* eslint-disable react/no-multi-comp */\r\n/* Heads up! HomepageHeading uses inline styling, however it's not the best practice. Use CSS or styled components for\r\n * such things.\r\n */\r\nconst HomepageHeading = ({ mobile }) => (\r\n  <Container text>\r\n    <Header\r\n      as='h1'\r\n      content='Home page'\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? '2em' : '4em',\r\n        fontWeight: 'normal',\r\n        marginBottom: 0,\r\n        marginTop: mobile ? '1.5em' : '3em',\r\n      }}\r\n    />\r\n    <Header\r\n      as='h2'\r\n      content='TODO: add content'\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? '1.5em' : '1.7em',\r\n        fontWeight: 'normal',\r\n        marginTop: mobile ? '0.5em' : '1.5em',\r\n      }}\r\n    />\r\n    <Button primary size='huge'>\r\n      Get Started\r\n      <Icon name='right arrow' />\r\n    </Button>\r\n  </Container>\r\n)\r\n\r\nHomepageHeading.propTypes = {\r\n  mobile: PropTypes.bool,\r\n}\r\n\r\n/* Heads up!\r\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\r\n * It can be more complicated, but you can create really flexible markup.\r\n */\r\nclass DesktopContainer extends Component {\r\n  state = {}\r\n\r\n  hideFixedMenu = () => this.setState({ fixed: false })\r\n  showFixedMenu = () => this.setState({ fixed: true })\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    const { fixed } = this.state\r\n\r\n    return (\r\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\r\n        <Visibility\r\n          once={false}\r\n          onBottomPassed={this.showFixedMenu}\r\n          onBottomPassedReverse={this.hideFixedMenu}\r\n        >\r\n          <Segment\r\n            inverted\r\n            textAlign='center'\r\n            style={{ minHeight: 700, padding: '1em 0em' }}\r\n            vertical\r\n          >\r\n            <Menu\r\n              fixed={fixed ? 'top' : null}\r\n              inverted={!fixed}\r\n              pointing={!fixed}\r\n              secondary={!fixed}\r\n              size='large'\r\n            >\r\n              <Container>\r\n                <Menu.Item as='a' active>\r\n                  Home\r\n                </Menu.Item>\r\n                <Menu.Item as='a'>Work</Menu.Item>\r\n                <Menu.Item as='a'>Company</Menu.Item>\r\n                <Menu.Item as='a'>Careers</Menu.Item>\r\n                <Menu.Item position='right'>\r\n                  <Button as='a' inverted={!fixed}>\r\n                    Log in\r\n                  </Button>\r\n                  <Button as='a' inverted={!fixed} primary={fixed} style={{ marginLeft: '0.5em' }}>\r\n                    Sign Up\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Container>\r\n            </Menu>\r\n            <HomepageHeading />\r\n          </Segment>\r\n        </Visibility>\r\n\r\n        {children}\r\n      </Responsive>\r\n    )\r\n  }\r\n}\r\n\r\nDesktopContainer.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\n\r\nclass MobileContainer extends Component {\r\n  state = {}\r\n\r\n  handleSidebarHide = () => this.setState({ sidebarOpened: false })\r\n\r\n  handleToggle = () => this.setState({ sidebarOpened: true })\r\n\r\n  render() {\r\n    const { children } = this.props\r\n    const { sidebarOpened } = this.state\r\n\r\n    return (\r\n      <Responsive\r\n        as={Sidebar.Pushable}\r\n        getWidth={getWidth}\r\n        maxWidth={Responsive.onlyMobile.maxWidth}\r\n      >\r\n        <Sidebar\r\n          as={Menu}\r\n          animation='push'\r\n          inverted\r\n          onHide={this.handleSidebarHide}\r\n          vertical\r\n          visible={sidebarOpened}\r\n        >\r\n          <Menu.Item as='a' active>\r\n            Home\r\n          </Menu.Item>\r\n          <Menu.Item as='a'>Work</Menu.Item>\r\n          <Menu.Item as='a'>Company</Menu.Item>\r\n          <Menu.Item as='a'>Careers</Menu.Item>\r\n          <Menu.Item as='a'>Login</Menu.Item>\r\n          <Menu.Item as='a'>Sign Up</Menu.Item>\r\n        </Sidebar>\r\n\r\n        <Sidebar.Pusher dimmed={sidebarOpened}>\r\n          <Segment\r\n            inverted\r\n            textAlign='center'\r\n            style={{ minHeight: 350, padding: '1em 0em' }}\r\n            vertical\r\n          >\r\n            <Container>\r\n              <Menu inverted pointing secondary size='large'>\r\n                <Menu.Item onClick={this.handleToggle}>\r\n                  <Icon name='sidebar' />\r\n                </Menu.Item>\r\n                <Menu.Item position='right'>\r\n                  <Button as='a' inverted>\r\n                    Log in\r\n                  </Button>\r\n                  <Button as='a' inverted style={{ marginLeft: '0.5em' }}>\r\n                    Sign Up\r\n                  </Button>\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Container>\r\n            <HomepageHeading mobile />\r\n          </Segment>\r\n\r\n          {children}\r\n        </Sidebar.Pusher>\r\n      </Responsive>\r\n    )\r\n  }\r\n}\r\n\r\nMobileContainer.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n  <div>\r\n    <DesktopContainer>{children}</DesktopContainer>\r\n    <MobileContainer>{children}</MobileContainer>\r\n  </div>\r\n)\r\n\r\nResponsiveContainer.propTypes = {\r\n  children: PropTypes.node,\r\n}\r\n\r\nconst HomepageLayout = () => (\r\n  <ResponsiveContainer>\r\n    <Segment style={{ padding: '8em 0em' }} vertical>\r\n      <Grid container stackable verticalAlign='middle'>\r\n        <Grid.Row>\r\n          <Grid.Column width={8}>\r\n            <Header as='h3' style={{ fontSize: '2em' }}>\r\n              Testing\r\n            </Header>\r\n            <p style={{ fontSize: '1.33em' }}>\r\n                Testing content\r\n            </p>\r\n            <Header as='h3' style={{ fontSize: '2em' }}>\r\n                Testing content\r\n            </Header>\r\n            <p style={{ fontSize: '1.33em' }}>\r\n            Testing content\r\n            </p>\r\n          </Grid.Column>\r\n          <Grid.Column floated='right' width={6}>\r\n            <Image bordered rounded size='large' src='/images/wireframe/white-image.png' />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column textAlign='center'>\r\n            <Button size='huge'>Check it Out</Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n\r\n    <Segment style={{ padding: '0em' }} vertical>\r\n      <Grid celled='internally' columns='equal' stackable>\r\n        <Grid.Row textAlign='center'>\r\n          <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\r\n            <Header as='h3' style={{ fontSize: '2em' }}>\r\n              \"Test content\"\r\n            </Header>\r\n            <p style={{ fontSize: '1.33em' }}>That is what they all say about us</p>\r\n          </Grid.Column>\r\n          <Grid.Column style={{ paddingBottom: '5em', paddingTop: '5em' }}>\r\n            <Header as='h3' style={{ fontSize: '2em' }}>\r\n              \"I shouldn't have gone with their competitor.\"\r\n            </Header>\r\n            <p style={{ fontSize: '1.33em' }}>\r\n              <Image avatar src='/images/avatar/large/nan.jpg' />\r\n              <b>Nan</b> Chief Fun Officer Acme Toys\r\n            </p>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n\r\n    <Segment style={{ padding: '8em 0em' }} vertical>\r\n      <Container text>\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n         Testing 3\r\n        </Header>\r\n        <p style={{ fontSize: '1.33em' }}>\r\n          testing 4\r\n        </p>\r\n        <Button as='a' size='large'>\r\n          Read More\r\n        </Button>\r\n\r\n        <Divider\r\n          as='h4'\r\n          className='header'\r\n          horizontal\r\n          style={{ margin: '3em 0em', textTransform: 'uppercase' }}\r\n        >\r\n          <a href='#test'>Case Studies</a>\r\n        </Divider>\r\n\r\n        <Header as='h3' style={{ fontSize: '2em' }}>\r\n          Did We Tell You About Our Bananas?\r\n        </Header>\r\n        <p style={{ fontSize: '1.33em' }}>\r\n          testing 5\r\n        </p>\r\n        <Button as='a' size='large'>\r\n          I'm Still Quite Interested\r\n        </Button>\r\n      </Container>\r\n    </Segment>\r\n\r\n    <Segment inverted vertical style={{ padding: '5em 0em' }}>\r\n      <Container>\r\n        <Grid divided inverted stackable>\r\n          <Grid.Row>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as='h4' content='About' />\r\n              <List link inverted>\r\n                <List.Item as='a'>Sitemap</List.Item>\r\n                <List.Item as='a'>Contact Us</List.Item>\r\n                <List.Item as='a'>Test</List.Item>\r\n                <List.Item as='a'>Plans</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as='h4' content='Services' />\r\n              <List link inverted>\r\n                <List.Item as='a'>Pre-Order</List.Item>\r\n                <List.Item as='a'>FAQ</List.Item>\r\n                <List.Item as='a'>How To Access</List.Item>\r\n                <List.Item as='a'>Test</List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={7}>\r\n              <Header as='h4' inverted>\r\n                Footer Header\r\n              </Header>\r\n              <p>\r\n                Extra space for a call to action inside the footer that could help re-engage users.\r\n              </p>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </Segment>\r\n  </ResponsiveContainer>\r\n)\r\n\r\nexport default HomepageLayout","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}