{"version":3,"sources":["images/my_icon.png","images/robotics.png","images/hkust.png","containers/App.js","serviceWorker.js","index.js"],"names":["module","exports","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","PersonalLinkIcon","Button","icon","labelPosition","Icon","name","HomepageHeading","mobile","Container","text","Header","as","content","inverted","style","fontSize","fontWeight","marginBottom","marginTop","animated","color","Content","visible","hidden","DesktopContainer","state","hideFixedMenu","setState","fixed","showFixedMenu","children","this","props","Visibility","once","onBottomPassed","onBottomPassedReverse","Segment","textAlign","minHeight","padding","vertical","Menu","pointing","secondary","size","Item","active","Grid","columns","stackable","Row","verticalAlign","Column","Image","avatar","src","myIcon","Component","ResponsiveContainer","MyContactInfo","List","href","HomepageLayout","container","width","floated","rounded","roboticsIcon","hkustIcon","Divider","className","horizontal","margin","textTransform","divided","link","Boolean","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c0d420a9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/my_icon.67b368dc.png\";","module.exports = __webpack_public_path__ + \"static/media/robotics.abbcb27e.png\";","module.exports = __webpack_public_path__ + \"static/media/hkust.158008d4.png\";","import PropTypes from \"prop-types\";\r\nimport React, { Component } from \"react\";\r\nimport myIcon from \"../images/my_icon.png\"\r\nimport roboticsIcon from \"../images/robotics.png\"\r\nimport hkustIcon from \"../images/hkust.png\"\r\nimport {\r\n  Button,\r\n  Container,\r\n  Divider,\r\n  Grid,\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  List,\r\n  Menu,\r\n  Responsive,\r\n  Segment,\r\n  Sidebar,\r\n  Visibility,\r\n} from \"semantic-ui-react\";\r\n\r\n// Heads up!\r\n// We using React Static to prerender our docs with server side rendering, this is a quite simple solution.\r\n// For more advanced usage please check Responsive docs under the \"Usage\" section.\r\nconst getWidth = () => {\r\n  const isSSR = typeof window === \"undefined\";\r\n\r\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\r\n};\r\n\r\nconst PersonalLinkIcon = () => (\r\n  <div>\r\n    <Button icon labelPosition='left'>\r\n      <Icon name='github' />\r\n      Github\r\n    </Button>\r\n    <Button icon labelPosition='left'>\r\n      linkedIn\r\n      <Icon name='linkedin' />\r\n    </Button>\r\n    <Button icon labelPosition='left'>\r\n      Blogger\r\n      <Icon name='blogger' />\r\n    </Button>\r\n  </div>\r\n)\r\n\r\n\r\nconst HomepageHeading = ({ mobile }) => (\r\n  <Container text>\r\n    <Header\r\n      as=\"h1\"\r\n      content=\"Software developer\"\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? \"2em\" : \"3em\",\r\n        fontWeight: \"normal\",\r\n        marginBottom: 0,\r\n        marginTop: mobile ? \"1.5em\" : \"2.4em\",\r\n      }}\r\n    />\r\n    <p\r\n      style={{\r\n        fontSize: \"1.33em\",\r\n      }}\r\n    >\r\n      Hello! My name is Felix. <br />\r\n      I am a student, blogger & developer. <br />\r\n    </p>\r\n    <Header\r\n      as=\"h2\"\r\n      inverted\r\n      style={{\r\n        fontSize: mobile ? \"1.5em\" : \"1.7em\",\r\n        fontWeight: \"normal\",\r\n        marginTop: mobile ? \"0.5em\" : \"1.5em\",\r\n      }}\r\n    />\r\n    <Header inverted>\r\n      <Button animated color=\"primary\">\r\n        <Button.Content visible>Checkout my projects</Button.Content>\r\n        <Button.Content hidden>\r\n          <Icon name='arrow right' />\r\n        </Button.Content>\r\n      </Button>\r\n    </Header>\r\n  </Container>\r\n);\r\n\r\nHomepageHeading.propTypes = {\r\n  mobile: PropTypes.bool,\r\n};\r\n\r\n/* Heads up!\r\n * Neither Semantic UI nor Semantic UI React offer a responsive navbar, however, it can be implemented easily.\r\n * It can be more complicated, but you can create really flexible markup.\r\n */\r\nclass DesktopContainer extends Component {\r\n  state = {};\r\n\r\n  hideFixedMenu = () =>\r\n    this.setState({\r\n      fixed: false,\r\n    });\r\n  showFixedMenu = () =>\r\n    this.setState({\r\n      fixed: true,\r\n    });\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { fixed } = this.state;\r\n\r\n    return (\r\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\r\n        <Visibility\r\n          once={false}\r\n          onBottomPassed={this.showFixedMenu}\r\n          onBottomPassedReverse={this.hideFixedMenu}\r\n        >\r\n          <Segment\r\n            inverted\r\n            textAlign=\"left\"\r\n            style={{\r\n              minHeight: 600,\r\n              padding: \"1em 0em \"\r\n            }}\r\n            vertical\r\n          >\r\n            <Menu\r\n              fixed={fixed ? \"top\" : null}\r\n              inverted={!fixed}\r\n              pointing={!fixed}\r\n              secondary={!fixed}\r\n              size=\"large\"\r\n            >\r\n              <Container>\r\n                <Menu.Item as=\"a\" active>\r\n                  Home\r\n                </Menu.Item>\r\n                <Menu.Item as=\"a\"> Projects </Menu.Item>\r\n                <Menu.Item as=\"a\"> Gallery </Menu.Item>\r\n                <Menu.Item as=\"a\"> Resume </Menu.Item>\r\n              </Container>\r\n            </Menu>\r\n            <Grid columns={2} stackable textAlign=\"center\">\r\n              \r\n              <Grid.Row verticalAlign=\"middle\">\r\n                <Grid.Column textAlign=\"middle\">\r\n                  <HomepageHeading />\r\n                </Grid.Column>\r\n                <Grid.Column>\r\n                  <Header>\r\n                    <Image style={{'font-size':100}} avatar src={myIcon}/>\r\n                      <Header inverted>\r\n                        <PersonalLinkIcon/>\r\n                      </Header>\r\n                  </Header>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Segment>\r\n        </Visibility>\r\n        {children}\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nDesktopContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nclass MobileContainer extends Component {\r\n  state = {};\r\n\r\n  handleSidebarHide = () =>\r\n    this.setState({\r\n      sidebarOpened: false,\r\n    });\r\n\r\n  handleToggle = () =>\r\n    this.setState({\r\n      sidebarOpened: true,\r\n    });\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    const { sidebarOpened } = this.state;\r\n\r\n    return (\r\n      <Responsive\r\n        as={Sidebar.Pushable}\r\n        getWidth={getWidth}\r\n        maxWidth={Responsive.onlyMobile.maxWidth}\r\n      >\r\n        <Sidebar\r\n          as={Menu}\r\n          animation=\"push\"\r\n          inverted\r\n          onHide={this.handleSidebarHide}\r\n          vertical\r\n          visible={sidebarOpened}\r\n        >\r\n          <Menu.Item as=\"a\" active>\r\n            Home\r\n          </Menu.Item>\r\n          <Menu.Item as=\"a\"> Projects </Menu.Item>\r\n          <Menu.Item as=\"a\"> Gallery </Menu.Item>\r\n          <Menu.Item as=\"a\"> Resume </Menu.Item>\r\n        </Sidebar>\r\n        <Sidebar.Pusher dimmed={sidebarOpened}>\r\n          <Segment\r\n            inverted\r\n            textAlign=\"center\"\r\n            style={{\r\n              minHeight: 350,\r\n              padding: \"1em 0em\",\r\n            }}\r\n            vertical\r\n          >\r\n            <Container>\r\n              <Menu inverted pointing secondary size=\"large\">\r\n                <Menu.Item onClick={this.handleToggle}>\r\n                  <Icon name=\"sidebar\" />\r\n                </Menu.Item>\r\n              </Menu>\r\n            </Container>\r\n            <HomepageHeading mobile />\r\n          </Segment>\r\n          {children}\r\n        </Sidebar.Pusher>\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nMobileContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nconst ResponsiveContainer = ({ children }) => (\r\n  <div>\r\n    <DesktopContainer> {children} </DesktopContainer>\r\n    {/* <MobileContainer> {children} </MobileContainer> */}\r\n  </div>\r\n);\r\n\r\nResponsiveContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\n\r\nconst MyContactInfo = () => (\r\n  <div>\r\n  <List>\r\n    <List.Item>\r\n      <List.Icon name='users' />\r\n      <List.Content>Felix Yau</List.Content>\r\n    </List.Item>\r\n    <List.Item>\r\n      <List.Icon name='marker' />\r\n      <List.Content>Kwai Chung, Hong Kong</List.Content>\r\n    </List.Item>\r\n    <List.Item>\r\n      <List.Icon name='mail' />\r\n      <List.Content>\r\n        <a href='mailto:ycfelix7@gmail.com'>ycfelix7@gmail.com</a>\r\n      </List.Content>\r\n    </List.Item>\r\n  </List>\r\n  </div>\r\n)\r\n\r\n\r\n\r\nconst HomepageLayout = () => (\r\n  <ResponsiveContainer>\r\n    <Segment\r\n      style={{\r\n        padding: \"8em 0em\",\r\n      }}\r\n      vertical\r\n    >\r\n      <Grid container stackable verticalAlign=\"middle\">\r\n        <Grid.Row>\r\n          <Grid.Column width={8}>\r\n            <Header\r\n              as=\"h3\"\r\n              style={{\r\n                fontSize: \"2em\",\r\n              }}\r\n            >\r\n              About myself\r\n            </Header>\r\n            <p\r\n              style={{\r\n                fontSize: \"1.33em\",\r\n                textAlign:\"justify\"\r\n              }}\r\n            >\r\n              Hi there! This is Felix, a junior developer who is passionate about \r\n              digital transformation & automation. My undergrad was in HKUST\r\n              majoring in computer science\r\n              with a minor in robotics. My area of interest includes mobile application, \r\n              robotic process automation, computer vision & cloud technology.\r\n\r\n            </p>\r\n            <p\r\n              style={{\r\n                fontSize: \"1.33em\",\r\n                textAlign:\"justify\"\r\n              }}\r\n            >\r\n              Throughout my university life, I met a lot of friends and smart people\r\n              in competitions that I participated in, \r\n              and many of them gave me insights and \r\n              experience about communication, team works & technical skills.\r\n            </p>\r\n          </Grid.Column>\r\n          <Grid.Column floated=\"right\" width={6}>\r\n            <Image\r\n              rounded\r\n              size=\"large\"\r\n              src={roboticsIcon}\r\n            />\r\n            <Header/>\r\n              <Image\r\n                rounded\r\n                size=\"large\"\r\n                src={hkustIcon}\r\n              />\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Grid.Row>\r\n          <Grid.Column textAlign=\"center\">\r\n            <Button size=\"huge\"> To my gallery </Button>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n      </Grid>\r\n    </Segment>\r\n    {/*  */}\r\n    <Segment\r\n      style={{\r\n        padding: \"8em 0em\",\r\n      }}\r\n      vertical\r\n    >\r\n      <Container text>\r\n        <Header\r\n          as=\"h3\"\r\n          style={{\r\n            fontSize: \"2em\",\r\n            textAlign:\"center\"\r\n          }}\r\n        >\r\n          Industrial Experience\r\n          \r\n        </Header>\r\n        <Grid columns={1} stackable textAlign=\"center\">\r\n          <Grid.Row >\r\n            <Grid.Column width={12}>\r\n        <Header style={{\r\n            fontSize: \"1.2em\",\r\n            textAlign:\"justify\",\r\n            fontWeight: \"normal\"\r\n          }}>\r\n          <p>\r\n            I had a few internships during my time as an student, in\r\n            local IT solution providers & multinational IT consulting company.\r\n            They were Weltronics Component Limited, Motorola Solutions and IBM.\r\n            <br/><br/><br/>\r\n\r\n            These internships not only provided me project handling \r\n            experience but also shed light on my career path. If you are interested\r\n            in some of my internship experience, please take a look at me resume.\r\n          </p>\r\n        </Header>\r\n        </Grid.Column>\r\n        </Grid.Row>\r\n        </Grid>\r\n\r\n        <Header style={{\r\n            fontSize: \"2em\",\r\n            textAlign:\"center\"\r\n          }}>\r\n          <Button as=\"a\" size=\"large\">\r\n          To my resume\r\n        </Button>\r\n        </Header>\r\n        \r\n        <Divider\r\n          as=\"h4\"\r\n          className=\"header\"\r\n          horizontal\r\n          style={{\r\n            margin: \"3em 0em\",\r\n            textTransform: \"uppercase\",\r\n          }}\r\n        >\r\n          <a href=\"#test\"> Contact me </a>\r\n        </Divider>\r\n        <Header\r\n          as=\"h3\"\r\n          style={{\r\n            fontSize: \"2em\",\r\n          }}\r\n        >\r\n          Open to collaboration on any projects\r\n        </Header>\r\n        <p\r\n          style={{\r\n            textAlign:\"justify\",\r\n            fontSize: \"1.33em\",\r\n          }}\r\n        >\r\n          If you have an exciting project idea that would like \r\n          a developer to casually help on, feel free to leave me a message or \r\n          contact me by email. If you would like to share career opportunities \r\n          you are welcome as well :-D \r\n        </p>\r\n        <MyContactInfo/>\r\n      </Container>\r\n    </Segment>\r\n    <Segment\r\n      inverted\r\n      vertical\r\n      style={{\r\n        padding: \"5em 0em\",\r\n      }}\r\n    >\r\n      <Container>\r\n        <Grid divided inverted stackable>\r\n          <Grid.Row>\r\n            <Grid.Column width={3}>\r\n              <Header inverted as=\"h4\" content=\"About\" />\r\n              <List link inverted>\r\n                <List.Item as=\"a\"> Myself </List.Item>\r\n                <List.Item as=\"a\"> Contact Me </List.Item>\r\n                <List.Item as=\"a\"> Awards </List.Item>\r\n                <List.Item as=\"a\"> Plans </List.Item>\r\n              </List>\r\n            </Grid.Column>\r\n          \r\n            <Grid.Column width={7}>\r\n              <Header as=\"h4\" inverted>\r\n                Disclaimer\r\n              </Header>\r\n              <p>\r\n                Any project publicly released on my github is free to use for any purpose\r\n                 without the need to notify me.\r\n              </p>\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      </Container>\r\n    </Segment>\r\n  </ResponsiveContainer>\r\n);\r\n\r\nexport default HomepageLayout;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'semantic-ui-css/semantic.min.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}